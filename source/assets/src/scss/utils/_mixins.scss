/*------------------------------------*\
		$MIXINS
\*------------------------------------*/

/*------------------------------------*\
	Pixels to ems
	font-size: em(21px, 15px); 
\*------------------------------------*/

@function em($target, $context: $base-font-size) {
	@if $target == 0 { @return 0 }
	@return $target / $context + 0em;
}

/*------------------------------------*\

Configurable Media Queries. Also used to generate old-ie CSS without MQs.
		 $value		- Breakpoint value
		 $feature	- Media query operator
		 $media		- Media type
\*------------------------------------*/

$fix-mqs: false !default;

@mixin media-min($value, $feature: 'min-width', $media: 'screen') {
	@if $fix-mqs {
		@if $fix-mqs >= $value {
			@content;
		}
	}
	@else {
		@media #{$media} and (#{$feature}: #{$value}) {
			@content;
		}
	}
}

$old-ie: false !default;

@mixin old-ie {
	@if $old-ie {
		@content;
	}
}

// height included

@mixin min-height($width, $height) {
	@if $fix-mqs {
		@if $fix-mqs >= $width {
			@content; 
		}
	}
	@else {
		@media screen and (min-width: $width) and (min-height: $height) {
			@content;
		}
	}
}


/*----------------------------------------------*\
		RGBA fallbacks:
		Use like this: @include tran(bg, #00ff00, .8);
\*----------------------------------------------*/


@function trans($color, $percentage) {
 @return lighten($color, (1-$percentage)*5%);
}
@function transd($color, $percentage) {
 @return darken($color, (1-$percentage)*5%);
}
@mixin tran($type, $color, $percentage, $shade: ligthen) {
	@if $shade == lighten {
		@if $type == color {
			color: trans($color, $percentage);
			color: rgba($color, $percentage);
		}
		@if $type == bg {
			background-color: trans($color, $percentage);
			background-color: rgba($color, $percentage);
		}
	}
	@else {
		 @if $type == color {
			color: transd($color, $percentage);
			color: rgba($color, $percentage);
		}
		@if $type == bg {
			background-color: transd($color, $percentage);
			background-color: rgba($color, $percentage);
		}
	}
}
