/*------------------------------------*\
	$HELPER
\*------------------------------------*/
/**
 * A series of helper classes to use arbitrarily. Only use a helper class if an
 * element/component doesnâ€™t already have a class to which you could apply this
 * styling, e.g. if you need to float `.main-nav` left then add `float:left;` to
 * that ruleset as opposed to adding the `.float--left` class to the markup.
 *
 * A lot of these classes carry `!important` as you will always want them to win
 * out over other selectors.
 */

/**
 *  Clearfix
 */
 .clearfix {
    &:after{
        content:"";
        display:table;
        clear:both;
    }
}


/**
 * Add/remove floats
 */
.float--right { 
	float: right!important; 
}
.float--left { 
	float: left !important; 
}
.float--none { 
	float: none !important; 
}


/**
 * Text alignment
 */
.text--left { 
	text-align: left!important; 
}
.text--center { 
	text-align: center!important; 
}
.text--right { 
	text-align: right !important; 
}

.chromeframe {
	padding: 0.2em 0;
	margin: 0.2em 0;
	background: $lightgrey;
	color: $black;
}

/**
 * Apply capital case to an element (usually a `strong`).
 */
.caps {
	text-transform: uppercase!important;
}


/**
 * Hide content off-screen without resorting to `display:none;`, also provide
 * breakpoint specific hidden elements.
 */
@mixin accessibility{
	border:0!important;
	clip:rect(0 0 0 0)!important;
	height:1px!important;
	margin:-1px!important;
	overflow:hidden!important;
	padding:0!important;
	position: absolute!important;
	width:1px!important;
}
.accessibility,
.visuallyhidden{
	@include accessibility;
}
